{
  "name": "yellow-cross",
  "version": "2.0.0",
  "description": "Enterprise grade platform for law firms to manage practices with PostgreSQL and Sequelize",
  "main": "backend/src/index.ts",
  "scripts": {
    "start": "ts-node --transpile-only backend/src/index.ts",
    "dev": "nodemon --exec ts-node --transpile-only backend/src/index.ts",
    "dev:react": "vite",
    "build:react": "vite build",
    "preview:react": "vite preview",
    "test": "jest",
    "test:parallel": "ts-node backend/tests/parallel-agent-runner.ts",
    "test:parallel:auth": "ts-node backend/tests/authenticated-parallel-agent-runner.ts",
    "test:e2e": "cypress run",
    "test:e2e:open": "cypress open",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "lint": "eslint backend/src/**/*.ts",
    "lint:frontend": "cd frontend && tsc --noEmit",
    "build": "npm run build:react",
    "setup": "npm run setup:install && npm run setup:env && npm run setup:db && npm run setup:verify",
    "setup:install": "npm install",
    "setup:env": "ts-node scripts/setup-env.ts --non-interactive",
    "setup:env:interactive": "ts-node scripts/setup-env.ts",
    "setup:db": "npm run db:seed",
    "setup:verify": "ts-node scripts/verify-setup.ts",
    "db:seed": "ts-node backend/src/config/seed.ts",
    "db:sync": "ts-node -e \"require('./backend/src/config/database').connectDB()\"",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart",
    "docker:setup": "npm run docker:build && npm run docker:up && echo 'Waiting for database...' && sleep 10 && npm run db:seed",
    "docs:generate": "jsdoc -c jsdoc.json",
    "docs:serve": "npx http-server docs/api -p 8080 -o",
    "docs:check": "node scripts/check-jsdoc-coverage.js",
    "screenshots:generate": "tsx scripts/generate-screenshots.ts"
  },
  "keywords": [
    "law firm",
    "case management",
    "legal",
    "enterprise",
    "practice management",
    "sequelize",
    "postgresql"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@reduxjs/toolkit": "^2.9.1",
    "@types/validator": "^13.15.3",
    "axios": "^1.12.2",
    "bcryptjs": "^3.0.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^5.1.0",
    "express-rate-limit": "^8.1.0",
    "helmet": "^8.1.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "moment": "^2.30.1",
    "mongoose": "^8.19.1",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.9",
    "pdfkit": "^0.17.2",
    "pg": "^8.16.3",
    "react": "^19.2.0",
    "react-dom": "^19.2.0",
    "react-redux": "^9.2.0",
    "react-router-dom": "^7.9.3",
    "reflect-metadata": "^0.2.2",
    "sequelize": "^6.37.7",
    "sequelize-typescript": "^2.1.6",
    "socket.io": "^4.8.1",
    "winston": "^3.18.3",
    "zod": "^4.1.12"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/helmet": "^0.0.48",
    "@types/jest": "^30.0.0",
    "@types/joi": "^17.2.2",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/multer": "^2.0.0",
    "@types/node": "^24.7.0",
    "@types/nodemailer": "^7.0.2",
    "@types/pdfkit": "^0.17.3",
    "@types/pg": "^8.15.5",
    "@types/react": "^19.2.2",
    "@types/react-dom": "^19.2.1",
    "@types/supertest": "^6.0.3",
    "@types/winston": "^2.4.4",
    "@vitejs/plugin-react": "^5.0.4",
    "cypress": "^15.4.0",
    "eslint": "^9.37.0",
    "jest": "^30.2.0",
    "nodemon": "^3.1.10",
    "playwright": "^1.56.1",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.4",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3",
    "vite": "^7.1.9"
  },
  "jest": {
    "testEnvironment": "node",
    "preset": "ts-jest",
    "setupFilesAfterEnv": [
      "<rootDir>/backend/tests/setup.ts"
    ],
    "testMatch": [
      "**/backend/tests/**/*.test.ts"
    ],
    "collectCoverageFrom": [
      "backend/src/**/*.ts"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/backend/src/generated/"
    ],
    "globals": {
      "ts-jest": {
        "tsconfig": {
          "experimentalDecorators": true,
          "emitDecoratorMetadata": true
        }
      }
    }
  }
}
